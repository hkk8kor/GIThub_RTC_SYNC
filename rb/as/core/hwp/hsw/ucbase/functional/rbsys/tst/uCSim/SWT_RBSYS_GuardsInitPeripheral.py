'''
/**
 * \Reference
 * Gen_SWFS_0979_HSW_OverallRequirements_6738
 *
 * \Purpose
 * Check peripheral guard configuration
 *
 * \Sequence
 * Run until start of FSW
 * If valid OEMBLDR exists:
 *   reset to OEMBLDR
 *   run until start of FSW
 * If valid RBBLDR exists:
 *   reset to RBBLDR
 *   reset back to FSW
 *   run until start of FSW
 * Run until guard configuration is finished
 *
 * \ExpectedResult
 * Guards are not locked at start of FSW (also after OEMBLDR/RBBLDR were running) and at the end of BMGR but are locked after initialization
 * Peripheral guards only allow access
 *   P1x: according to K:/DfsDE/DIV/CS/DE_CS$/Tech/HSW_Doc/Evo17/06_SW-Development/50_SW-Groups/uC_Functional/RBSYS/HSM and Guard stuff/GUAMregisterAccess.xlsx
 *   U2x: to safe bus masters with exceptions: DMA may access GTM; AUD and MAU may access HBus and PBus Peripherals
 */
'''

import swt2.target as tgt
import swt2.test as tst
import swt2.environment as env
import swt2.application as app


app.execution_condition("ALWAYS")

#############################################################################
#                             Helper functions                              #
#############################################################################

# helper function for reading register value so that test can handle both register names and register addresses (if names are not available in VLAB)
def ReadRegisterOrAddress(reg):
  if type(reg) is long:
    return tgt.read_memory_uint32(reg)
  else:
    return tgt.get_register(reg).read()

# check that lock bits are set to expected value
def CheckGuardLockBit(expectedValue):
  for (lockReg, exceptions) in LockRegs:
    if targetDevice not in exceptions:
      lock = ReadRegisterOrAddress(lockReg)
      tst.eval_eq((lock >> 31) & 0x1, expectedValue)


#############################################################################
#                             Setup                                         #
#############################################################################
# Guard configuration depends on target device and does not factor in emulation device function switch
targetDevice = app.get_function_switch_setting("RBFS_TargetDevice")[-2:]
# U2x emulation devices have to permit access for debug bus masters (AUD, MAU)
emulationDevice = app.get_function_switch_setting("RBFS_EmulationDevice")[-4:]

# SPIDs and SPID masks
safeSPID       = 2
DMAUnsafeSPID  = 5
AUDSPID        = 30
MAUSPID        = 31
if env.is_renesas_p1x_device():
  secureSPIDmask = 0x3
elif env.is_renesas_u2a_device():
  DebugSPID_mask = (0x1 << AUDSPID) | (0x1 << MAUSPID)
  secureSPID = 26
elif env.is_renesas_u2c_device():
  safeSPID       = 0
  DebugSPID_mask = (0x1 << MAUSPID)
  secureSPID = 26


# Guard Registers and expected bits
if env.is_renesas_p1x_device():
  # Secure and PEID4 GuardConfigig corresponds to K:/DfsDE/DIV/CS/DE_CS$/Tech/HSW_Doc/Evo17/06_SW-Development/50_SW-Groups/uC_Functional/RBSYS/HSM and Guard stuff/GUAMregisterAccess.xlsx
  # Device exception from Renesas HW UMs
  PeripheralGuardRegs = [
    # PBG Group: APBGRD_PFSS0
    (0xFFC4C008, 0xFFC4C00C),                           # PDMACM_B
    (0xFFC4C018, 0xFFC4C01C),                           # PDMACH_B
    (0xFFC4C028, 0xFFC4C02C),                           # INTC2_B

    # PBG Group: APBGRD_PFSS1
    (0xFFC4C048, 0xFFC4C04C, ["secureSPID"]),           # PBG_B     ICUM by default allowed
    (0xFFC4C058, 0xFFC4C05C),                           # SP1_B
    (0xFFC4C068, 0xFFC4C06C, ["D1", "D2", "D3"]),       # SP2_B     except D1, D2, D3
    (0xFFC4C078, 0xFFC4C07C),                           # SP4_B

    # PBG Group: PBG1 #0
    (0xFFEE0008, 0xFFEE000C, ["secureSPID"]),           # FSGD1APROT01, FSGD1ASPID01      ICUM by default allowed
    (0xFFEE0018, 0xFFEE001C),                           # FSGD1APROT03, FSGD1ASPID03
    (0xFFEE0028, 0xFFEE002C, ["PEID4"]),                # FSGD1APROT05, FSGD1ASPID05      DMA allowed
    (0xFFEE0038, 0xFFEE003C, ["D1", "D2", "D3"]),       # FSGD1APROT07, FSGD1ASPID07      except D1, D2, D3

    # PBG Group: PBG1 #1
    (0xFFEE0208, 0xFFEE020C),                           # FSGD1BPROT01, FSGD1BSPID01
    (0xFFEE0218, 0xFFEE021C, ["D1", "D2", "D3", "D4"]), # FSGD1BPROT03, FSGD1BSPID03      except D1, D2, D3, D4
    (0xFFEE0238, 0xFFEE023C, ["D1", "D2"]),             # FSGD1BPROT07, FSGD1BSPID07      except D1, D2
    (0xFFEE0248, 0xFFEE024C, ["D1", "D2", "D3"]),       # FSGD1BPROT09, FSGD1BSPID09      except D1, D2, D3, D4(BGA-156)
    (0xFFEE0258, 0xFFEE025C, ["PEID4"]),                # FSGD1BPROT11, FSGD1BSPID11      DMA allowed
    (0xFFEE0268, 0xFFEE026C, ["D1", "D2", "PEID4"]),    # FSGD1BPROT13, FSGD1BSPID13      except D1, D2 + DMA allowed

    # PBG Group: PBG2
    (0xFFDDD008, 0xFFDDD00C, ["secureSPID"]),           # FSGD2APROT01, FSGD2ASPID01      ICUM by default allowed
    (0xFFDDD018, 0xFFDDD01C),                           # FSGD2APROT03, FSGD2ASPID03
    (0xFFDDD028, 0xFFDDD02C, ["PEID4"]),                # FSGD2APROT05, FSGD2ASPID05      DMA allowed
    (0xFFDDD038, 0xFFDDD03C),                           # FSGD2APROT07, FSGD2ASPID07
    (0xFFDDD048, 0xFFDDD04C, ["D1", "D2", "D3"]),       # FSGD2APROT09, FSGD2ASPID09      except D1, D2, D3
    (0xFFDDD058, 0xFFDDD05C),                           # FSGD2APROT11, FSGD2ASPID11
    (0xFFDDD068, 0xFFDDD06C, ["D1", "D2", "D3"]),       # FSGD2APROT13, FSGD2ASPID13      except D1, D2, D3

    # PBG Group: PBG3 #0
    (0xFFF94008, 0xFFF9400C),                           # FSGD3APROT01, FSGD3ASPID01
    (0xFFF94018, 0xFFF9401C),                           # FSGD3APROT03, FSGD3ASPID03
    (0xFFF94028, 0xFFF9402C),                           # FSGD3APROT05, FSGD3ASPID05
    (0xFFF94038, 0xFFF9403C),                           # FSGD3APROT07, FSGD3ASPID07
    (0xFFF94048, 0xFFF9404C),                           # FSGD3APROT09, FSGD3ASPID09
    (0xFFF94058, 0xFFF9405C, ["D1", "D2"]),             # FSGD3APROT11, FSGD3ASPID11      except D1, D2
    (0xFFF94068, 0xFFF9406C),                           # FSGD3APROT13, FSGD3ASPID13
    (0xFFF94078, 0xFFF9407C, ["D1", "D2"]),             # FSGD3APROT15, FSGD3ASPID15      except D1, D2

    # PBG Group: PBG3 #1
    (0xFFF94208, 0xFFF9420C),                           # FSGD3BPROT01, FSGD3BSPID01
    (0xFFF94218, 0xFFF9421C, ["D1", "D2"]),             # FSGD3BPROT03, FSGD3BSPID03      except D1, D2
    (0xFFF94238, 0xFFF9423C, ["D1", "D2"]),             # FSGD3BPROT07, FSGD3BSPID07      except D1, D2
    (0xFFF94248, 0xFFF9424C, ["D1", "D2", "D3"]),       # FSGD3BPROT09, FSGD3BSPID09      except D1, D2, D3, D4(BGA-156)
    (0xFFF94258, 0xFFF9425C, ["PEID4"]),                # FSGD3BPROT11, FSGD3BSPID11      DMA allowed
    (0xFFF94268, 0xFFF9426C, ["PEID4"]),                # FSGD3BPROT13, FSGD3BSPID13      DMA allowed

    # PBG Group: PBG4 #0
    (0xFFF90008, 0xFFF9000C, ["secureSPID"]),           # FSGD4APROT01, FSGD4ASPID01      ICUM by default allowed
    (0xFFF90018, 0xFFF9001C),                           # FSGD4APROT03, FSGD4ASPID03
    (0xFFF90028, 0xFFF9002C),                           # FSGD4APROT05, FSGD4ASPID05
    (0xFFF90038, 0xFFF9003C),                           # FSGD4APROT07, FSGD4ASPID07
    (0xFFF90048, 0xFFF9004C, ["D1", "D2"]),             # FSGD4APROT09, FSGD4ASPID09      except D1, D2
    (0xFFF90058, 0xFFF9005C),                           # FSGD4APROT11, FSGD4ASPID11
    (0xFFF90068, 0xFFF9006C),                           # FSGD4APROT13, FSGD4ASPID13
    (0xFFF90078, 0xFFF9007C),                           # FSGD4APROT15, FSGD4ASPID15

    # PBG Group: PBG4 #1
    (0xFFF90208, 0xFFF9020C),                           # FSGD4BPROT01, FSGD4BSPID01
    (0xFFF90218, 0xFFF9021C),                           # FSGD4BPROT03, FSGD4BSPID03
    (0xFFF90228, 0xFFF9022C, ["D1", "D2"]),             # FSGD4BPROT05, FSGD4BSPID05      except D1, D2
    (0xFFF90238, 0xFFF9023C),                           # FSGD4BPROT07, FSGD4BSPID07
    (0xFFF90248, 0xFFF9024C),                           # FSGD4BPROT09, FSGD4BSPID09
    (0xFFF90258, 0xFFF9025C),                           # FSGD4BPROT11, FSGD4BSPID11
    (0xFFF90268, 0xFFF9026C, ["secureSPID"]),           # FSGD4BPROT13, FSGD4BSPID13      ICUM by default allowed

    # PBG Group: PBG5
    (0xFFC5A008, 0xFFC5A00C, ["secureSPID"]),           # FSGD5APROT01, FSGD5ASPID01      except D3, D4, D5 + ICUM by default allowed
    (0xFFC5A028, 0xFFC5A02C, ["secureSPID"]),           # FSGD5APROT05, FSGD5ASPID05      except D3, D4, D5 + ICUM allowed

    # HBG:
    (0xFFFA0008, 0xFFFA000C, ["D1", "D2"]),             # FSGDF0PROT01, FSGDF0SPID01      except D1, D2
    (0xFFFA0028, 0xFFFA002C, ["D1", "D2", "D3"]),       # FSGDF1PROT01, FSGDF1SPID01      except D1, D2, D3, D4(BGA-156)
    (0xFFFA0048, 0xFFFA004C, ["D1", "D2"]),             # FSGDE0PROT01, FSGDE0SPID01      except D1, D2
    (0xFFFA0068, 0xFFFA006C, ["D1", "D2", "D3"]),       # FSGDE1PROT01, FSGDE1SPID01      except D1, D2, D3, D4(BGA-156)
    (0xFFFA0088, 0xFFFA008C, ["D1", "D2", "D3"]),       # FSGDM0PROT01, FSGDM0SPID01      except D1, D2, D3, D4(BGA-156)
    (0xFFFA0098, 0xFFFA009C, ["D1", "D2", "D3"]),       # FSGDM0PROT03, FSGDM0SPID03      except D1, D2, D3, D4(BGA-156)
    (0xFFFA00A8, 0xFFFA00AC, ["D1", "D2", "D3"]),       # FSGDM0PROT05, FSGDM0SPID05      except D1, D2, D3, D4(BGA-156)
    (0xFFFA00B8, 0xFFFA00BC, ["D1", "D2", "D3"]),       # FSGDM0PROT07, FSGDM0SPID07      except D1, D2, D3, D4(BGA-156)
    (0xFFFA00C8, 0xFFFA00CC, ["D1", "D2", "D3"]),       # FSGDM0PROT09, FSGDM0SPID09      except D1, D2, D3, D4(BGA-156)
  ]
  if targetDevice in ["D1", "D2"]: # single core, no HSM
    PeripheralGuardPEIDMask   = (0x1 << 18) | (0x1 << 21)
    PeripheralGuardPEIDPEs    = (0x1 << 18)
    PeripheralGuardPEID4      = (0x1 << 21)
    PeripheralGuardPEIDSecure = 0x0
  elif targetDevice in ["D3"]: # single core
    PeripheralGuardPEIDMask   = (0x1 << 18) | (0x1 << 21) | (0x1 << 22)
    PeripheralGuardPEIDPEs    = (0x1 << 18)
    PeripheralGuardPEID4      = (0x1 << 21)
    PeripheralGuardPEIDSecure = (0x1 << 22)
  else:
    PeripheralGuardPEIDMask   = (0x1 << 18) | (0x1 << 19) | (0x1 << 21) | (0x1 << 22)
    PeripheralGuardPEIDPEs    = (0x1 << 18) | (0x1 << 19)
    PeripheralGuardPEID4      = (0x1 << 21)
    PeripheralGuardPEIDSecure = (0x1 << 22)

  LockRegs = [(regs[0], regs[2] if len(regs) == 3 else []) for regs in PeripheralGuardRegs]

elif env.is_renesas_u2a_device():
  INTC2GuardProtRegs = [
    "RH850.PFRH850.GUARD_INTC2.PROT_GR",
    "RH850.PFRH850.GUARD_INTC2.PROT_IMR"
  ]
  INTC2GuardProtRegs += ["RH850.PFRH850.GUARD_INTC2.PROT_%03d" % i for i in range(32, 767)]
  INTC2GuardMPIDRegs = ["RH850.PFRH850.GUARD_INTC2.MPID%d" % i for i in range(8)]

  DTSGuardProtRegs = [
    "RH850.PFRH850.GUARD_DTS.PROT_GR"
  ]
  DTSGuardProtRegs += ["RH850.PFRH850.GUARD_DTS.PROT_%03d" % i for i in range(128)]
  DTSGuardMPIDRegs = ["RH850.PFRH850.GUARD_DTS.MPID%d" % i for i in range(8)]

  DMA0GuardProtRegs = [
    "RH850.PFRH850.GUARD_DMA0.PROT_GR",
    "RH850.PFRH850.GUARD_DMA0.PROT_DP"
  ]
  DMA0GuardProtRegs += ["RH850.PFRH850.GUARD_DMA0.PROT_%03d" % i for i in range(16)]
  DMA0GuardMPIDRegs = ["RH850.PFRH850.GUARD_DMA0.MPID%d" % i for i in range(8)]

  DMA1GuardProtRegs = [
    "RH850.PFRH850.GUARD_DMA1.PROT_GR",
    "RH850.PFRH850.GUARD_DMA1.PROT_DP"
  ]
  DMA1GuardProtRegs += ["RH850.PFRH850.GUARD_DMA1.PROT_%03d" % i for i in range(16)]
  DMA1GuardMPIDRegs = ["RH850.PFRH850.GUARD_DMA1.MPID%d" % i for i in range(8)]

  MPIDGuardProtRegs = [(INTC2GuardProtRegs,INTC2GuardMPIDRegs), (DTSGuardProtRegs,DTSGuardMPIDRegs), (DMA0GuardProtRegs,DMA0GuardMPIDRegs), (DMA1GuardProtRegs,DMA1GuardMPIDRegs)]
  MPIDEnableOffset = 8
  MPIDEnableValue = 1
  MPIDWriteGlobalEnableOffset = 1
  MPIDWriteGlobalEnableValue = 0
  MPIDMPIDOffset = 16
  MPIDMPIDMask = 0x00FF0000


  PeripheralGuardRegs = [
    # IPIR Guard
    ("RH850.PFRH850.GUARD_IPIR.PROT0_R0", "RH850.PFRH850.GUARD_IPIR.PROT1_R0"),
    ("RH850.PFRH850.GUARD_IPIR.PROT0_R1", "RH850.PFRH850.GUARD_IPIR.PROT1_R1"),
    ("RH850.PFRH850.GUARD_IPIR.PROT0_R2", "RH850.PFRH850.GUARD_IPIR.PROT1_R2", ["M2", "M3"]), # not implemented on U2A8 despite HW UM saying they should be there, see Mantis 8909
    ("RH850.PFRH850.GUARD_IPIR.PROT0_R3", "RH850.PFRH850.GUARD_IPIR.PROT1_R3", ["M2", "M3"]),
    ("RH850.PFRH850.GUARD_IPIR.PROT0_T0", "RH850.PFRH850.GUARD_IPIR.PROT1_T0"),
    ("RH850.PFRH850.GUARD_IPIR.PROT0_T1", "RH850.PFRH850.GUARD_IPIR.PROT1_T1"),
    ("RH850.PFRH850.GUARD_IPIR.PROT0_T2", "RH850.PFRH850.GUARD_IPIR.PROT1_T2", ["M2", "M3"]),
    ("RH850.PFRH850.GUARD_IPIR.PROT0_T3", "RH850.PFRH850.GUARD_IPIR.PROT1_T3", ["M2", "M3"]),
    ("RH850.PFRH850.GUARD_IPIR.PROT0_4" , "RH850.PFRH850.GUARD_IPIR.PROT1_4"),

    # BARR Guard
    ('RH850.PFRH850.GUARD_BARR.PROT0_0' , 'RH850.PFRH850.GUARD_BARR.PROT1_0'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_1' , 'RH850.PFRH850.GUARD_BARR.PROT1_1'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_2' , 'RH850.PFRH850.GUARD_BARR.PROT1_2'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_3' , 'RH850.PFRH850.GUARD_BARR.PROT1_3'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_4' , 'RH850.PFRH850.GUARD_BARR.PROT1_4'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_5' , 'RH850.PFRH850.GUARD_BARR.PROT1_5'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_6' , 'RH850.PFRH850.GUARD_BARR.PROT1_6'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_7' , 'RH850.PFRH850.GUARD_BARR.PROT1_7'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_8' , 'RH850.PFRH850.GUARD_BARR.PROT1_8'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_9' , 'RH850.PFRH850.GUARD_BARR.PROT1_9'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_10', 'RH850.PFRH850.GUARD_BARR.PROT1_10'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_11', 'RH850.PFRH850.GUARD_BARR.PROT1_11'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_12', 'RH850.PFRH850.GUARD_BARR.PROT1_12'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_13', 'RH850.PFRH850.GUARD_BARR.PROT1_13'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_14', 'RH850.PFRH850.GUARD_BARR.PROT1_14'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_15', 'RH850.PFRH850.GUARD_BARR.PROT1_15'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_16', 'RH850.PFRH850.GUARD_BARR.PROT1_16'),

    # TPTM Guard
    ('RH850.PFRH850.GUARD_TPTM.PROT0_0', 'RH850.PFRH850.GUARD_TPTM.PROT1_0'),
    ('RH850.PFRH850.GUARD_TPTM.PROT0_1', 'RH850.PFRH850.GUARD_TPTM.PROT1_1'),
    ('RH850.PFRH850.GUARD_TPTM.PROT0_2', 'RH850.PFRH850.GUARD_TPTM.PROT1_2', ["M2", "M3"]),
    ('RH850.PFRH850.GUARD_TPTM.PROT0_3', 'RH850.PFRH850.GUARD_TPTM.PROT1_3', ["M2", "M3"]),
    ('RH850.PFRH850.GUARD_TPTM.PROT0_8', 'RH850.PFRH850.GUARD_TPTM.PROT1_8'),
    ('RH850.PFRH850.GUARD_TPTM.PROT0_9', 'RH850.PFRH850.GUARD_TPTM.PROT1_9'),

    # PBG Group: PBG00
    ('RH850.PFRH850.PBG0.PROT0_CH0_GR0', 'RH850.PFRH850.PBG0.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG0.PROT0_CH1_GR0', 'RH850.PFRH850.PBG0.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG0.PROT0_CH2_GR0', 'RH850.PFRH850.PBG0.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG0.PROT0_CH3_GR0', 'RH850.PFRH850.PBG0.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG0.PROT0_CH4_GR0', 'RH850.PFRH850.PBG0.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG0.PROT0_CH5_GR0', 'RH850.PFRH850.PBG0.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG0.PROT0_CH6_GR0', 'RH850.PFRH850.PBG0.PROT1_CH6_GR0'),

    # PBG Group: PBG01
    ('RH850.PFRH850.PBG0.PROT0_CH0_GR1', 'RH850.PFRH850.PBG0.PROT1_CH0_GR1'),
    ('RH850.PFRH850.PBG0.PROT0_CH1_GR1', 'RH850.PFRH850.PBG0.PROT1_CH1_GR1'),
    ('RH850.PFRH850.PBG0.PROT0_CH2_GR1', 'RH850.PFRH850.PBG0.PROT1_CH2_GR1', ["M2"]),
    ('RH850.PFRH850.PBG0.PROT0_CH3_GR1', 'RH850.PFRH850.PBG0.PROT1_CH3_GR1', ["M2"]),

    # PBG Group: PBG10
    ('RH850.PFRH850.PBG1.PROT0_CH0_GR0', 'RH850.PFRH850.PBG1.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG1.PROT0_CH1_GR0', 'RH850.PFRH850.PBG1.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG1.PROT0_CH2_GR0', 'RH850.PFRH850.PBG1.PROT1_CH2_GR0'),

    # PBG Group: PBG20
    ('RH850.PFRH850.PBG2.PROT0_CH0_GR0' , 'RH850.PFRH850.PBG2.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH1_GR0' , 'RH850.PFRH850.PBG2.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH2_GR0' , 'RH850.PFRH850.PBG2.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH3_GR0' , 'RH850.PFRH850.PBG2.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH4_GR0' , 'RH850.PFRH850.PBG2.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH5_GR0' , 'RH850.PFRH850.PBG2.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH6_GR0' , 'RH850.PFRH850.PBG2.PROT1_CH6_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH7_GR0' , 'RH850.PFRH850.PBG2.PROT1_CH7_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH8_GR0' , 'RH850.PFRH850.PBG2.PROT1_CH8_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH9_GR0' , 'RH850.PFRH850.PBG2.PROT1_CH9_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH10_GR0', 'RH850.PFRH850.PBG2.PROT1_CH10_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH11_GR0', 'RH850.PFRH850.PBG2.PROT1_CH11_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH12_GR0', 'RH850.PFRH850.PBG2.PROT1_CH12_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH13_GR0', 'RH850.PFRH850.PBG2.PROT1_CH13_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH14_GR0', 'RH850.PFRH850.PBG2.PROT1_CH14_GR0'),
    ('RH850.PFRH850.PBG2.PROT0_CH15_GR0', 'RH850.PFRH850.PBG2.PROT1_CH15_GR0'),

    # PBG Group: PBG21
    ('RH850.PFRH850.PBG2.PROT0_CH0_GR1' , 'RH850.PFRH850.PBG2.PROT1_CH0_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH1_GR1' , 'RH850.PFRH850.PBG2.PROT1_CH1_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH2_GR1' , 'RH850.PFRH850.PBG2.PROT1_CH2_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH3_GR1' , 'RH850.PFRH850.PBG2.PROT1_CH3_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH4_GR1' , 'RH850.PFRH850.PBG2.PROT1_CH4_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH5_GR1' , 'RH850.PFRH850.PBG2.PROT1_CH5_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH6_GR1' , 'RH850.PFRH850.PBG2.PROT1_CH6_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH7_GR1' , 'RH850.PFRH850.PBG2.PROT1_CH7_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH8_GR1' , 'RH850.PFRH850.PBG2.PROT1_CH8_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH9_GR1' , 'RH850.PFRH850.PBG2.PROT1_CH9_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH10_GR1', 'RH850.PFRH850.PBG2.PROT1_CH10_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH11_GR1', 'RH850.PFRH850.PBG2.PROT1_CH11_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH12_GR1', 'RH850.PFRH850.PBG2.PROT1_CH12_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH13_GR1', 'RH850.PFRH850.PBG2.PROT1_CH13_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH14_GR1', 'RH850.PFRH850.PBG2.PROT1_CH14_GR1'),
    ('RH850.PFRH850.PBG2.PROT0_CH15_GR1', 'RH850.PFRH850.PBG2.PROT1_CH15_GR1'),

    # PBG Group: PBG22
    ('RH850.PFRH850.PBG2.PROT0_CH0_GR2' , 'RH850.PFRH850.PBG2.PROT1_CH0_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH1_GR2' , 'RH850.PFRH850.PBG2.PROT1_CH1_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH2_GR2' , 'RH850.PFRH850.PBG2.PROT1_CH2_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH3_GR2' , 'RH850.PFRH850.PBG2.PROT1_CH3_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH4_GR2' , 'RH850.PFRH850.PBG2.PROT1_CH4_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH5_GR2' , 'RH850.PFRH850.PBG2.PROT1_CH5_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH6_GR2' , 'RH850.PFRH850.PBG2.PROT1_CH6_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH7_GR2' , 'RH850.PFRH850.PBG2.PROT1_CH7_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH8_GR2' , 'RH850.PFRH850.PBG2.PROT1_CH8_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH9_GR2' , 'RH850.PFRH850.PBG2.PROT1_CH9_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH10_GR2', 'RH850.PFRH850.PBG2.PROT1_CH10_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH11_GR2', 'RH850.PFRH850.PBG2.PROT1_CH11_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH12_GR2', 'RH850.PFRH850.PBG2.PROT1_CH12_GR2'),
    ('RH850.PFRH850.PBG2.PROT0_CH13_GR2', 'RH850.PFRH850.PBG2.PROT1_CH13_GR2'),

    # PBG Group: PBG30
    ('RH850.PFRH850.PBG3.PROT0_CH0_GR0' , 'RH850.PFRH850.PBG3.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH1_GR0' , 'RH850.PFRH850.PBG3.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH2_GR0' , 'RH850.PFRH850.PBG3.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH3_GR0' , 'RH850.PFRH850.PBG3.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH4_GR0' , 'RH850.PFRH850.PBG3.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH5_GR0' , 'RH850.PFRH850.PBG3.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH6_GR0' , 'RH850.PFRH850.PBG3.PROT1_CH6_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH7_GR0' , 'RH850.PFRH850.PBG3.PROT1_CH7_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH8_GR0' , 'RH850.PFRH850.PBG3.PROT1_CH8_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH9_GR0' , 'RH850.PFRH850.PBG3.PROT1_CH9_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH10_GR0', 'RH850.PFRH850.PBG3.PROT1_CH10_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH11_GR0', 'RH850.PFRH850.PBG3.PROT1_CH11_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH12_GR0', 'RH850.PFRH850.PBG3.PROT1_CH12_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH13_GR0', 'RH850.PFRH850.PBG3.PROT1_CH13_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH14_GR0', 'RH850.PFRH850.PBG3.PROT1_CH14_GR0'),
    ('RH850.PFRH850.PBG3.PROT0_CH15_GR0', 'RH850.PFRH850.PBG3.PROT1_CH15_GR0'),

    # PBG Group: PBG31
    ('RH850.PFRH850.PBG3.PROT0_CH0_GR1' , 'RH850.PFRH850.PBG3.PROT1_CH0_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH1_GR1' , 'RH850.PFRH850.PBG3.PROT1_CH1_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH2_GR1' , 'RH850.PFRH850.PBG3.PROT1_CH2_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH3_GR1' , 'RH850.PFRH850.PBG3.PROT1_CH3_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH4_GR1' , 'RH850.PFRH850.PBG3.PROT1_CH4_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH5_GR1' , 'RH850.PFRH850.PBG3.PROT1_CH5_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH6_GR1' , 'RH850.PFRH850.PBG3.PROT1_CH6_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH7_GR1' , 'RH850.PFRH850.PBG3.PROT1_CH7_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH8_GR1' , 'RH850.PFRH850.PBG3.PROT1_CH8_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH9_GR1' , 'RH850.PFRH850.PBG3.PROT1_CH9_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH10_GR1', 'RH850.PFRH850.PBG3.PROT1_CH10_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH11_GR1', 'RH850.PFRH850.PBG3.PROT1_CH11_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH12_GR1', 'RH850.PFRH850.PBG3.PROT1_CH12_GR1'),
    ('RH850.PFRH850.PBG3.PROT0_CH13_GR1', 'RH850.PFRH850.PBG3.PROT1_CH13_GR1'),

    # PBG Group: PBG32
    ('RH850.PFRH850.PBG3.PROT0_CH0_GR2' , 'RH850.PFRH850.PBG3.PROT1_CH0_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH1_GR2' , 'RH850.PFRH850.PBG3.PROT1_CH1_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH2_GR2' , 'RH850.PFRH850.PBG3.PROT1_CH2_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH3_GR2' , 'RH850.PFRH850.PBG3.PROT1_CH3_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH4_GR2' , 'RH850.PFRH850.PBG3.PROT1_CH4_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH5_GR2' , 'RH850.PFRH850.PBG3.PROT1_CH5_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH6_GR2' , 'RH850.PFRH850.PBG3.PROT1_CH6_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH7_GR2' , 'RH850.PFRH850.PBG3.PROT1_CH7_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH8_GR2' , 'RH850.PFRH850.PBG3.PROT1_CH8_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH9_GR2' , 'RH850.PFRH850.PBG3.PROT1_CH9_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH10_GR2', 'RH850.PFRH850.PBG3.PROT1_CH10_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH11_GR2', 'RH850.PFRH850.PBG3.PROT1_CH11_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH12_GR2', 'RH850.PFRH850.PBG3.PROT1_CH12_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH13_GR2', 'RH850.PFRH850.PBG3.PROT1_CH13_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH14_GR2', 'RH850.PFRH850.PBG3.PROT1_CH14_GR2'),
    ('RH850.PFRH850.PBG3.PROT0_CH15_GR2', 'RH850.PFRH850.PBG3.PROT1_CH15_GR2'),

    # PBG Group: PBG33
    ('RH850.PFRH850.PBG3.PROT0_CH0_GR3', 'RH850.PFRH850.PBG3.PROT1_CH0_GR3'),
    ('RH850.PFRH850.PBG3.PROT0_CH1_GR3', 'RH850.PFRH850.PBG3.PROT1_CH1_GR3'),
    ('RH850.PFRH850.PBG3.PROT0_CH2_GR3', 'RH850.PFRH850.PBG3.PROT1_CH2_GR3'),
    ('RH850.PFRH850.PBG3.PROT0_CH3_GR3', 'RH850.PFRH850.PBG3.PROT1_CH3_GR3'),
    ('RH850.PFRH850.PBG3.PROT0_CH4_GR3', 'RH850.PFRH850.PBG3.PROT1_CH4_GR3'),
    ('RH850.PFRH850.PBG3.PROT0_CH5_GR3', 'RH850.PFRH850.PBG3.PROT1_CH5_GR3'),

    # PBG Group: PBG40
    ('RH850.PFRH850.PBG4.PROT0_CH0_GR0', 'RH850.PFRH850.PBG4.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG4.PROT0_CH1_GR0', 'RH850.PFRH850.PBG4.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG4.PROT0_CH2_GR0', 'RH850.PFRH850.PBG4.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG4.PROT0_CH3_GR0', 'RH850.PFRH850.PBG4.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG4.PROT0_CH4_GR0', 'RH850.PFRH850.PBG4.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG4.PROT0_CH5_GR0', 'RH850.PFRH850.PBG4.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG4.PROT0_CH6_GR0', 'RH850.PFRH850.PBG4.PROT1_CH6_GR0'),
    ('RH850.PFRH850.PBG4.PROT0_CH7_GR0', 'RH850.PFRH850.PBG4.PROT1_CH7_GR0'),

    # PBG Group: PBG50
    ('RH850.PFRH850.PBG5.PROT0_CH0_GR0' , 'RH850.PFRH850.PBG5.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH1_GR0' , 'RH850.PFRH850.PBG5.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH2_GR0' , 'RH850.PFRH850.PBG5.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH3_GR0' , 'RH850.PFRH850.PBG5.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH4_GR0' , 'RH850.PFRH850.PBG5.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH5_GR0' , 'RH850.PFRH850.PBG5.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH6_GR0' , 'RH850.PFRH850.PBG5.PROT1_CH6_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH7_GR0' , 'RH850.PFRH850.PBG5.PROT1_CH7_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH8_GR0' , 'RH850.PFRH850.PBG5.PROT1_CH8_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH9_GR0' , 'RH850.PFRH850.PBG5.PROT1_CH9_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH10_GR0', 'RH850.PFRH850.PBG5.PROT1_CH10_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH11_GR0', 'RH850.PFRH850.PBG5.PROT1_CH11_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH12_GR0', 'RH850.PFRH850.PBG5.PROT1_CH12_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH13_GR0', 'RH850.PFRH850.PBG5.PROT1_CH13_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH14_GR0', 'RH850.PFRH850.PBG5.PROT1_CH14_GR0'),
    ('RH850.PFRH850.PBG5.PROT0_CH15_GR0', 'RH850.PFRH850.PBG5.PROT1_CH15_GR0'),

    # PBG Group: PBG51
    ('RH850.PFRH850.PBG5.PROT0_CH0_GR1' , 'RH850.PFRH850.PBG5.PROT1_CH0_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH1_GR1' , 'RH850.PFRH850.PBG5.PROT1_CH1_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH2_GR1' , 'RH850.PFRH850.PBG5.PROT1_CH2_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH3_GR1' , 'RH850.PFRH850.PBG5.PROT1_CH3_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH4_GR1' , 'RH850.PFRH850.PBG5.PROT1_CH4_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH5_GR1' , 'RH850.PFRH850.PBG5.PROT1_CH5_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH6_GR1' , 'RH850.PFRH850.PBG5.PROT1_CH6_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH7_GR1' , 'RH850.PFRH850.PBG5.PROT1_CH7_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH8_GR1' , 'RH850.PFRH850.PBG5.PROT1_CH8_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH9_GR1' , 'RH850.PFRH850.PBG5.PROT1_CH9_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH10_GR1', 'RH850.PFRH850.PBG5.PROT1_CH10_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH11_GR1', 'RH850.PFRH850.PBG5.PROT1_CH11_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH12_GR1', 'RH850.PFRH850.PBG5.PROT1_CH12_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH13_GR1', 'RH850.PFRH850.PBG5.PROT1_CH13_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH14_GR1', 'RH850.PFRH850.PBG5.PROT1_CH14_GR1'),
    ('RH850.PFRH850.PBG5.PROT0_CH15_GR1', 'RH850.PFRH850.PBG5.PROT1_CH15_GR1'),

    # PBG Group: PBG52
    ('RH850.PFRH850.PBG5.PROT0_CH0_GR2' , 'RH850.PFRH850.PBG5.PROT1_CH0_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH1_GR2' , 'RH850.PFRH850.PBG5.PROT1_CH1_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH2_GR2' , 'RH850.PFRH850.PBG5.PROT1_CH2_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH3_GR2' , 'RH850.PFRH850.PBG5.PROT1_CH3_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH4_GR2' , 'RH850.PFRH850.PBG5.PROT1_CH4_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH5_GR2' , 'RH850.PFRH850.PBG5.PROT1_CH5_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH6_GR2' , 'RH850.PFRH850.PBG5.PROT1_CH6_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH7_GR2' , 'RH850.PFRH850.PBG5.PROT1_CH7_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH8_GR2' , 'RH850.PFRH850.PBG5.PROT1_CH8_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH9_GR2' , 'RH850.PFRH850.PBG5.PROT1_CH9_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH10_GR2', 'RH850.PFRH850.PBG5.PROT1_CH10_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH11_GR2', 'RH850.PFRH850.PBG5.PROT1_CH11_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH12_GR2', 'RH850.PFRH850.PBG5.PROT1_CH12_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH13_GR2', 'RH850.PFRH850.PBG5.PROT1_CH13_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH14_GR2', 'RH850.PFRH850.PBG5.PROT1_CH14_GR2'),
    ('RH850.PFRH850.PBG5.PROT0_CH15_GR2', 'RH850.PFRH850.PBG5.PROT1_CH15_GR2'),

    # PBG Group: PBG53
    ('RH850.PFRH850.PBG5.PROT0_CH0_GR3', 'RH850.PFRH850.PBG5.PROT1_CH0_GR3'),
    ('RH850.PFRH850.PBG5.PROT0_CH1_GR3', 'RH850.PFRH850.PBG5.PROT1_CH1_GR3'),
    ('RH850.PFRH850.PBG5.PROT0_CH2_GR3', 'RH850.PFRH850.PBG5.PROT1_CH2_GR3'),
    ('RH850.PFRH850.PBG5.PROT0_CH3_GR3', 'RH850.PFRH850.PBG5.PROT1_CH3_GR3'),
    ('RH850.PFRH850.PBG5.PROT0_CH4_GR3', 'RH850.PFRH850.PBG5.PROT1_CH4_GR3'),
    ('RH850.PFRH850.PBG5.PROT0_CH5_GR3', 'RH850.PFRH850.PBG5.PROT1_CH5_GR3'),
    ('RH850.PFRH850.PBG5.PROT0_CH6_GR3', 'RH850.PFRH850.PBG5.PROT1_CH6_GR3'),

    # PBG Group: PBG6L0
    ('RH850.PFRH850.PBG6L0.PROT0_CH0_GR0', 'RH850.PFRH850.PBG6L0.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG6L0.PROT0_CH1_GR0', 'RH850.PFRH850.PBG6L0.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG6L0.PROT0_CH2_GR0', 'RH850.PFRH850.PBG6L0.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG6L0.PROT0_CH3_GR0', 'RH850.PFRH850.PBG6L0.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG6L0.PROT0_CH4_GR0', 'RH850.PFRH850.PBG6L0.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG6L0.PROT0_CH5_GR0', 'RH850.PFRH850.PBG6L0.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG6L0.PROT0_CH6_GR0', 'RH850.PFRH850.PBG6L0.PROT1_CH6_GR0'),

    # PBG Group: PBG6L1
    ('RH850.PFRH850.PBG6L1.PROT0_CH0_GR0', 'RH850.PFRH850.PBG6L1.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG6L1.PROT0_CH1_GR0', 'RH850.PFRH850.PBG6L1.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG6L1.PROT0_CH2_GR0', 'RH850.PFRH850.PBG6L1.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG6L1.PROT0_CH3_GR0', 'RH850.PFRH850.PBG6L1.PROT1_CH3_GR0'),

    # PBG Group: PBG6H0
    ('RH850.PFRH850.PBG6H0.PROT0_CH0_GR0', 'RH850.PFRH850.PBG6H0.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG6H0.PROT0_CH1_GR0', 'RH850.PFRH850.PBG6H0.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG6H0.PROT0_CH2_GR0', 'RH850.PFRH850.PBG6H0.PROT1_CH2_GR0', ["DMAUnsafeSPID"]),

    # PBG Group: PBG70
    ('RH850.PFRH850.PBG7.PROT0_CH0_GR0', 'RH850.PFRH850.PBG7.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG7.PROT0_CH1_GR0', 'RH850.PFRH850.PBG7.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG7.PROT0_CH2_GR0', 'RH850.PFRH850.PBG7.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG7.PROT0_CH3_GR0', 'RH850.PFRH850.PBG7.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG7.PROT0_CH4_GR0', 'RH850.PFRH850.PBG7.PROT1_CH4_GR0'),

    # PBG Group: PBG80
    ('RH850.PFRH850.PBG8.PROT0_CH0_GR0' , 'RH850.PFRH850.PBG8.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG8.PROT0_CH1_GR0' , 'RH850.PFRH850.PBG8.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG8.PROT0_CH2_GR0' , 'RH850.PFRH850.PBG8.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG8.PROT0_CH3_GR0' , 'RH850.PFRH850.PBG8.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG8.PROT0_CH4_GR0' , 'RH850.PFRH850.PBG8.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG8.PROT0_CH5_GR0' , 'RH850.PFRH850.PBG8.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG8.PROT0_CH6_GR0' , 'RH850.PFRH850.PBG8.PROT1_CH6_GR0'),
    ('RH850.PFRH850.PBG8.PROT0_CH7_GR0' , 'RH850.PFRH850.PBG8.PROT1_CH7_GR0'),
    ('RH850.PFRH850.PBG8.PROT0_CH8_GR0' , 'RH850.PFRH850.PBG8.PROT1_CH8_GR0'),
    ('RH850.PFRH850.PBG8.PROT0_CH9_GR0' , 'RH850.PFRH850.PBG8.PROT1_CH9_GR0'),
    ('RH850.PFRH850.PBG8.PROT0_CH10_GR0', 'RH850.PFRH850.PBG8.PROT1_CH10_GR0'),

    # PBG Group: PBG90
    ('RH850.PFRH850.PBG9.PROT0_CH0_GR0', 'RH850.PFRH850.PBG9.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG9.PROT0_CH1_GR0', 'RH850.PFRH850.PBG9.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG9.PROT0_CH2_GR0', 'RH850.PFRH850.PBG9.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG9.PROT0_CH3_GR0', 'RH850.PFRH850.PBG9.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG9.PROT0_CH4_GR0', 'RH850.PFRH850.PBG9.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG9.PROT0_CH5_GR0', 'RH850.PFRH850.PBG9.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG9.PROT0_CH6_GR0', 'RH850.PFRH850.PBG9.PROT1_CH6_GR0'),
    ('RH850.PFRH850.PBG9.PROT0_CH7_GR0', 'RH850.PFRH850.PBG9.PROT1_CH7_GR0'),

    # HBG
    ('RH850.PFRH850.HBG91.PROT0', 'RH850.PFRH850.HBG91.PROT1', ["M2"]),
    ('RH850.PFRH850.HBG92.PROT0', 'RH850.PFRH850.HBG92.PROT1'),
    ('RH850.PFRH850.HBG93.PROT0', 'RH850.PFRH850.HBG93.PROT1', ["M2"]),
    ('RH850.PFRH850.HBG96.PROT0', 'RH850.PFRH850.HBG96.PROT1')
  ]
  PeripheralGuardEnableOffset = 8
  PeripheralGuardEnableValue = 1
  PeripheralGuardWriteGlobalEnableOffset = 1
  PeripheralGuardWriteGlobalEnableValue = 0

  LockRegs = [(regs[0], regs[2] if len(regs) == 3 else []) for regs in PeripheralGuardRegs if not isinstance(regs[0], (int, long)) and ("PBG" in regs[0] or "HBG" in regs[0])]

elif env.is_renesas_u2c_device():
  INTC2GuardProtRegs = [
    "RH850.PFRH850.GUARD_INTC2.PROT_GR",
    "RH850.PFRH850.GUARD_INTC2.PROT_IMR"
  ]
  INTC2GuardProtRegs += ["RH850.PFRH850.GUARD_INTC2.PROT_%03d" % i for i in range(32, 640)]
  INTC2GuardMPIDRegs = ["RH850.PFRH850.GUARD_INTC2.MPID%d" % i for i in range(8)]

  DTSGuardProtRegs = [
    "RH850.PFRH850.GUARD_DTS.PROT_GR"
  ]
  DTSGuardProtRegs += ["RH850.PFRH850.GUARD_DTS.PROT_%03d" % i for i in range(128)]
  DTSGuardMPIDRegs = ["RH850.PFRH850.GUARD_DTS.MPID%d" % i for i in range(8)]

  DMA0GuardProtRegs = [
    "RH850.PFRH850.GUARD_DMA0.PROT_GR",
    "RH850.PFRH850.GUARD_DMA0.PROT_DP",
    "RH850.PFRH850.GUARD_DMA0.PROT_CR"
  ]
  DMA0GuardProtRegs += ["RH850.PFRH850.GUARD_DMA0.PROT_%03d" % i for i in range(16)]
  DMA0GuardMPIDRegs = ["RH850.PFRH850.GUARD_DMA0.MPID%d" % i for i in range(8)]

  DMA1GuardProtRegs = [
    "RH850.PFRH850.GUARD_DMA1.PROT_GR",
    "RH850.PFRH850.GUARD_DMA1.PROT_DP",
    "RH850.PFRH850.GUARD_DMA1.PROT_CR"
  ]
  DMA1GuardProtRegs += ["RH850.PFRH850.GUARD_DMA1.PROT_%03d" % i for i in range(16)]
  DMA1GuardMPIDRegs = ["RH850.PFRH850.GUARD_DMA1.MPID%d" % i for i in range(8)]

  MPIDGuardProtRegs = [(INTC2GuardProtRegs,INTC2GuardMPIDRegs), (DTSGuardProtRegs,DTSGuardMPIDRegs), (DMA0GuardProtRegs,DMA0GuardMPIDRegs), (DMA1GuardProtRegs,DMA1GuardMPIDRegs)]
  MPIDEnableOffset = 8
  MPIDEnableValue = 1
  MPIDWriteGlobalEnableOffset = 1
  MPIDWriteGlobalEnableValue = 0
  MPIDMPIDOffset = 16
  MPIDMPIDMask = 0x00FF0000


  PeripheralGuardRegs = [
    # IPIR Guard, todo: partially not implemented in VLAB yet
    ("RH850.PFRH850.GUARD_IPIR.PROT0_R0", "RH850.PFRH850.GUARD_IPIR.PROT1_R0"),
    ("RH850.PFRH850.GUARD_IPIR.PROT0_R1", "RH850.PFRH850.GUARD_IPIR.PROT1_R1"),
    #("RH850.PFRH850.GUARD_IPIR.PROT0_R2", "RH850.PFRH850.GUARD_IPIR.PROT1_R2"),
    #("RH850.PFRH850.GUARD_IPIR.PROT0_R3", "RH850.PFRH850.GUARD_IPIR.PROT1_R3"),
    ("RH850.PFRH850.GUARD_IPIR.PROT0_T0", "RH850.PFRH850.GUARD_IPIR.PROT1_T0"),
    ("RH850.PFRH850.GUARD_IPIR.PROT0_T1", "RH850.PFRH850.GUARD_IPIR.PROT1_T1"),
    #("RH850.PFRH850.GUARD_IPIR.PROT0_T2", "RH850.PFRH850.GUARD_IPIR.PROT1_T2"),
    #("RH850.PFRH850.GUARD_IPIR.PROT0_T3", "RH850.PFRH850.GUARD_IPIR.PROT1_T3"),
    ("RH850.PFRH850.GUARD_IPIR.PROT0_4" , "RH850.PFRH850.GUARD_IPIR.PROT1_4"),

    # BARR Guard
    ('RH850.PFRH850.GUARD_BARR.PROT0_0' , 'RH850.PFRH850.GUARD_BARR.PROT1_0'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_1' , 'RH850.PFRH850.GUARD_BARR.PROT1_1'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_2' , 'RH850.PFRH850.GUARD_BARR.PROT1_2'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_3' , 'RH850.PFRH850.GUARD_BARR.PROT1_3'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_4' , 'RH850.PFRH850.GUARD_BARR.PROT1_4'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_5' , 'RH850.PFRH850.GUARD_BARR.PROT1_5'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_6' , 'RH850.PFRH850.GUARD_BARR.PROT1_6'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_7' , 'RH850.PFRH850.GUARD_BARR.PROT1_7'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_8' , 'RH850.PFRH850.GUARD_BARR.PROT1_8'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_9' , 'RH850.PFRH850.GUARD_BARR.PROT1_9'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_10', 'RH850.PFRH850.GUARD_BARR.PROT1_10'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_11', 'RH850.PFRH850.GUARD_BARR.PROT1_11'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_12', 'RH850.PFRH850.GUARD_BARR.PROT1_12'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_13', 'RH850.PFRH850.GUARD_BARR.PROT1_13'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_14', 'RH850.PFRH850.GUARD_BARR.PROT1_14'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_15', 'RH850.PFRH850.GUARD_BARR.PROT1_15'),
    ('RH850.PFRH850.GUARD_BARR.PROT0_16', 'RH850.PFRH850.GUARD_BARR.PROT1_16'),

    # TPTM Guard, todo: not correctly implemented in VLAB yet
    #('RH850.PFRH850.GUARD_TPTM.PROT0_IF0', 'RH850.PFRH850.GUARD_TPTM.PROT1_IF0'),
    #('RH850.PFRH850.GUARD_TPTM.PROT0_IF1', 'RH850.PFRH850.GUARD_TPTM.PROT1_IF1'),
    #('RH850.PFRH850.GUARD_TPTM.PROT0_U0',  'RH850.PFRH850.GUARD_TPTM.PROT1_U0'),
    #('RH850.PFRH850.GUARD_TPTM.PROT0_U1',  'RH850.PFRH850.GUARD_TPTM.PROT1_U1'),
    #('RH850.PFRH850.GUARD_TPTM.PROT0_U8',  'RH850.PFRH850.GUARD_TPTM.PROT1_U8'),
    #('RH850.PFRH850.GUARD_TPTM.PROT0_U9',  'RH850.PFRH850.GUARD_TPTM.PROT1_U9'),

    # PBG Group: PBG00
    ('RH850.PFRH850.PBG00.PROT0_CH0_GR0', 'RH850.PFRH850.PBG00.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG00.PROT0_CH1_GR0', 'RH850.PFRH850.PBG00.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG00.PROT0_CH2_GR0', 'RH850.PFRH850.PBG00.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG00.PROT0_CH3_GR0', 'RH850.PFRH850.PBG00.PROT1_CH3_GR0'),

    # PBG Group: PBG01
    ('RH850.PFRH850.PBG00.PROT0_CH0_GR1', 'RH850.PFRH850.PBG00.PROT1_CH0_GR1'),
    ('RH850.PFRH850.PBG00.PROT0_CH1_GR1', 'RH850.PFRH850.PBG00.PROT1_CH1_GR1'),

    # PBG Group: PBG10
    ('RH850.PFRH850.PBG10.PROT0_CH0_GR0', 'RH850.PFRH850.PBG10.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG10.PROT0_CH1_GR0', 'RH850.PFRH850.PBG10.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG10.PROT0_CH2_GR0', 'RH850.PFRH850.PBG10.PROT1_CH2_GR0'),

    # PBG Group: PBG20
    ('RH850.PFRH850.PBG20.PROT0_CH0_GR0' , 'RH850.PFRH850.PBG20.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH1_GR0' , 'RH850.PFRH850.PBG20.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH2_GR0' , 'RH850.PFRH850.PBG20.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH3_GR0' , 'RH850.PFRH850.PBG20.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH4_GR0' , 'RH850.PFRH850.PBG20.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH5_GR0' , 'RH850.PFRH850.PBG20.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH6_GR0' , 'RH850.PFRH850.PBG20.PROT1_CH6_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH7_GR0' , 'RH850.PFRH850.PBG20.PROT1_CH7_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH8_GR0' , 'RH850.PFRH850.PBG20.PROT1_CH8_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH9_GR0' , 'RH850.PFRH850.PBG20.PROT1_CH9_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH10_GR0', 'RH850.PFRH850.PBG20.PROT1_CH10_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH11_GR0', 'RH850.PFRH850.PBG20.PROT1_CH11_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH12_GR0', 'RH850.PFRH850.PBG20.PROT1_CH12_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH13_GR0', 'RH850.PFRH850.PBG20.PROT1_CH13_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH14_GR0', 'RH850.PFRH850.PBG20.PROT1_CH14_GR0'),
    ('RH850.PFRH850.PBG20.PROT0_CH15_GR0', 'RH850.PFRH850.PBG20.PROT1_CH15_GR0'),

    # PBG Group: PBG21
    ('RH850.PFRH850.PBG20.PROT0_CH0_GR1' , 'RH850.PFRH850.PBG20.PROT1_CH0_GR1'),
    ('RH850.PFRH850.PBG20.PROT0_CH1_GR1' , 'RH850.PFRH850.PBG20.PROT1_CH1_GR1'),
    ('RH850.PFRH850.PBG20.PROT0_CH2_GR1' , 'RH850.PFRH850.PBG20.PROT1_CH2_GR1'),
    ('RH850.PFRH850.PBG20.PROT0_CH3_GR1' , 'RH850.PFRH850.PBG20.PROT1_CH3_GR1'),
    ('RH850.PFRH850.PBG20.PROT0_CH4_GR1' , 'RH850.PFRH850.PBG20.PROT1_CH4_GR1'),
    ('RH850.PFRH850.PBG20.PROT0_CH5_GR1' , 'RH850.PFRH850.PBG20.PROT1_CH5_GR1'),
    ('RH850.PFRH850.PBG20.PROT0_CH7_GR1' , 'RH850.PFRH850.PBG20.PROT1_CH7_GR1'),
    ('RH850.PFRH850.PBG20.PROT0_CH8_GR1' , 'RH850.PFRH850.PBG20.PROT1_CH8_GR1'),
    ('RH850.PFRH850.PBG20.PROT0_CH9_GR1' , 'RH850.PFRH850.PBG20.PROT1_CH9_GR1'),
    ('RH850.PFRH850.PBG20.PROT0_CH11_GR1', 'RH850.PFRH850.PBG20.PROT1_CH11_GR1'),
    ('RH850.PFRH850.PBG20.PROT0_CH12_GR1', 'RH850.PFRH850.PBG20.PROT1_CH12_GR1'),
    ('RH850.PFRH850.PBG20.PROT0_CH13_GR1', 'RH850.PFRH850.PBG20.PROT1_CH13_GR1'),
    ('RH850.PFRH850.PBG20.PROT0_CH15_GR1', 'RH850.PFRH850.PBG20.PROT1_CH15_GR1'),

    # PBG Group: PBG22
    ('RH850.PFRH850.PBG20.PROT0_CH0_GR2' , 'RH850.PFRH850.PBG20.PROT1_CH0_GR2'),
    ('RH850.PFRH850.PBG20.PROT0_CH1_GR2' , 'RH850.PFRH850.PBG20.PROT1_CH1_GR2'),
    ('RH850.PFRH850.PBG20.PROT0_CH2_GR2' , 'RH850.PFRH850.PBG20.PROT1_CH2_GR2'),
    ('RH850.PFRH850.PBG20.PROT0_CH3_GR2' , 'RH850.PFRH850.PBG20.PROT1_CH3_GR2'),
    ('RH850.PFRH850.PBG20.PROT0_CH4_GR2' , 'RH850.PFRH850.PBG20.PROT1_CH4_GR2'),
    ('RH850.PFRH850.PBG20.PROT0_CH5_GR2' , 'RH850.PFRH850.PBG20.PROT1_CH5_GR2'),
    ('RH850.PFRH850.PBG20.PROT0_CH6_GR2' , 'RH850.PFRH850.PBG20.PROT1_CH6_GR2'),
    ('RH850.PFRH850.PBG20.PROT0_CH7_GR2' , 'RH850.PFRH850.PBG20.PROT1_CH7_GR2'),
    ('RH850.PFRH850.PBG20.PROT0_CH8_GR2' , 'RH850.PFRH850.PBG20.PROT1_CH8_GR2'),
    ('RH850.PFRH850.PBG20.PROT0_CH9_GR2' , 'RH850.PFRH850.PBG20.PROT1_CH9_GR2'),
    ('RH850.PFRH850.PBG20.PROT0_CH10_GR2', 'RH850.PFRH850.PBG20.PROT1_CH10_GR2'),
    ('RH850.PFRH850.PBG20.PROT0_CH11_GR2', 'RH850.PFRH850.PBG20.PROT1_CH11_GR2'),

    # PBG Group: PBG30
    ('RH850.PFRH850.PBG30.PROT0_CH0_GR0' , 'RH850.PFRH850.PBG30.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH1_GR0' , 'RH850.PFRH850.PBG30.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH2_GR0' , 'RH850.PFRH850.PBG30.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH3_GR0' , 'RH850.PFRH850.PBG30.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH4_GR0' , 'RH850.PFRH850.PBG30.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH5_GR0' , 'RH850.PFRH850.PBG30.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH6_GR0' , 'RH850.PFRH850.PBG30.PROT1_CH6_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH7_GR0' , 'RH850.PFRH850.PBG30.PROT1_CH7_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH8_GR0' , 'RH850.PFRH850.PBG30.PROT1_CH8_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH9_GR0' , 'RH850.PFRH850.PBG30.PROT1_CH9_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH10_GR0', 'RH850.PFRH850.PBG30.PROT1_CH10_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH11_GR0', 'RH850.PFRH850.PBG30.PROT1_CH11_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH12_GR0', 'RH850.PFRH850.PBG30.PROT1_CH12_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH13_GR0', 'RH850.PFRH850.PBG30.PROT1_CH13_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH14_GR0', 'RH850.PFRH850.PBG30.PROT1_CH14_GR0'),
    ('RH850.PFRH850.PBG30.PROT0_CH15_GR0', 'RH850.PFRH850.PBG30.PROT1_CH15_GR0'),

    # PBG Group: PBG31
    ('RH850.PFRH850.PBG30.PROT0_CH0_GR1' , 'RH850.PFRH850.PBG30.PROT1_CH0_GR1'),

    # PBG Group: PBG40
    ('RH850.PFRH850.PBG40.PROT0_CH0_GR0' , 'RH850.PFRH850.PBG40.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH1_GR0' , 'RH850.PFRH850.PBG40.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH2_GR0' , 'RH850.PFRH850.PBG40.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH3_GR0' , 'RH850.PFRH850.PBG40.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH4_GR0' , 'RH850.PFRH850.PBG40.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH5_GR0' , 'RH850.PFRH850.PBG40.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH6_GR0' , 'RH850.PFRH850.PBG40.PROT1_CH6_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH7_GR0' , 'RH850.PFRH850.PBG40.PROT1_CH7_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH8_GR0' , 'RH850.PFRH850.PBG40.PROT1_CH8_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH9_GR0' , 'RH850.PFRH850.PBG40.PROT1_CH9_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH10_GR0', 'RH850.PFRH850.PBG40.PROT1_CH10_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH11_GR0', 'RH850.PFRH850.PBG40.PROT1_CH11_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH12_GR0', 'RH850.PFRH850.PBG40.PROT1_CH12_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH13_GR0', 'RH850.PFRH850.PBG40.PROT1_CH13_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH14_GR0', 'RH850.PFRH850.PBG40.PROT1_CH14_GR0'),
    ('RH850.PFRH850.PBG40.PROT0_CH15_GR0', 'RH850.PFRH850.PBG40.PROT1_CH15_GR0'),

    # PBG Group: PBG41
    ('RH850.PFRH850.PBG40.PROT0_CH0_GR1' , 'RH850.PFRH850.PBG40.PROT1_CH0_GR1'),

    # PBG Group: PBG50
    ('RH850.PFRH850.PBG50.PROT0_CH0_GR0' , 'RH850.PFRH850.PBG50.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH1_GR0' , 'RH850.PFRH850.PBG50.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH2_GR0' , 'RH850.PFRH850.PBG50.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH3_GR0' , 'RH850.PFRH850.PBG50.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH4_GR0' , 'RH850.PFRH850.PBG50.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH5_GR0' , 'RH850.PFRH850.PBG50.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH6_GR0' , 'RH850.PFRH850.PBG50.PROT1_CH6_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH7_GR0' , 'RH850.PFRH850.PBG50.PROT1_CH7_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH8_GR0' , 'RH850.PFRH850.PBG50.PROT1_CH8_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH9_GR0' , 'RH850.PFRH850.PBG50.PROT1_CH9_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH10_GR0', 'RH850.PFRH850.PBG50.PROT1_CH10_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH11_GR0', 'RH850.PFRH850.PBG50.PROT1_CH11_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH12_GR0', 'RH850.PFRH850.PBG50.PROT1_CH12_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH13_GR0', 'RH850.PFRH850.PBG50.PROT1_CH13_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH14_GR0', 'RH850.PFRH850.PBG50.PROT1_CH14_GR0'),
    ('RH850.PFRH850.PBG50.PROT0_CH15_GR0', 'RH850.PFRH850.PBG50.PROT1_CH15_GR0'),

    # PBG Group: PBG51
    ('RH850.PFRH850.PBG50.PROT0_CH1_GR1' , 'RH850.PFRH850.PBG50.PROT1_CH1_GR1'),
    ('RH850.PFRH850.PBG50.PROT0_CH3_GR1' , 'RH850.PFRH850.PBG50.PROT1_CH3_GR1'),
    ('RH850.PFRH850.PBG50.PROT0_CH4_GR1' , 'RH850.PFRH850.PBG50.PROT1_CH4_GR1'),
    ('RH850.PFRH850.PBG50.PROT0_CH5_GR1' , 'RH850.PFRH850.PBG50.PROT1_CH5_GR1'),
    ('RH850.PFRH850.PBG50.PROT0_CH6_GR1' , 'RH850.PFRH850.PBG50.PROT1_CH6_GR1'),
    ('RH850.PFRH850.PBG50.PROT0_CH7_GR1' , 'RH850.PFRH850.PBG50.PROT1_CH7_GR1'),
    ('RH850.PFRH850.PBG50.PROT0_CH8_GR1' , 'RH850.PFRH850.PBG50.PROT1_CH8_GR1'),
    ('RH850.PFRH850.PBG50.PROT0_CH9_GR1' , 'RH850.PFRH850.PBG50.PROT1_CH9_GR1'),
    ('RH850.PFRH850.PBG50.PROT0_CH10_GR1', 'RH850.PFRH850.PBG50.PROT1_CH10_GR1'),
    ('RH850.PFRH850.PBG50.PROT0_CH11_GR1', 'RH850.PFRH850.PBG50.PROT1_CH11_GR1'),
    ('RH850.PFRH850.PBG50.PROT0_CH12_GR1', 'RH850.PFRH850.PBG50.PROT1_CH12_GR1'),
    ('RH850.PFRH850.PBG50.PROT0_CH15_GR1', 'RH850.PFRH850.PBG50.PROT1_CH15_GR1'),

    # PBG Group: PBG52
    ('RH850.PFRH850.PBG50.PROT0_CH0_GR2' , 'RH850.PFRH850.PBG50.PROT1_CH0_GR2'),
    ('RH850.PFRH850.PBG50.PROT0_CH1_GR2' , 'RH850.PFRH850.PBG50.PROT1_CH1_GR2'),
    ('RH850.PFRH850.PBG50.PROT0_CH2_GR2' , 'RH850.PFRH850.PBG50.PROT1_CH2_GR2'),
    ('RH850.PFRH850.PBG50.PROT0_CH3_GR2' , 'RH850.PFRH850.PBG50.PROT1_CH3_GR2'),
    ('RH850.PFRH850.PBG50.PROT0_CH4_GR2' , 'RH850.PFRH850.PBG50.PROT1_CH4_GR2'),
    ('RH850.PFRH850.PBG50.PROT0_CH5_GR2' , 'RH850.PFRH850.PBG50.PROT1_CH5_GR2'),

    # PBG Group: PBG60
    ('RH850.PFRH850.PBG60.PROT0_CH0_GR0', 'RH850.PFRH850.PBG60.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG60.PROT0_CH1_GR0', 'RH850.PFRH850.PBG60.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG60.PROT0_CH2_GR0', 'RH850.PFRH850.PBG60.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG60.PROT0_CH3_GR0', 'RH850.PFRH850.PBG60.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG60.PROT0_CH4_GR0', 'RH850.PFRH850.PBG60.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG60.PROT0_CH5_GR0', 'RH850.PFRH850.PBG60.PROT1_CH5_GR0'),

    # PBG Group: PBG61
    ('RH850.PFRH850.PBG61.PROT0_CH0_GR0', 'RH850.PFRH850.PBG61.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG61.PROT0_CH1_GR0', 'RH850.PFRH850.PBG61.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG61.PROT0_CH2_GR0', 'RH850.PFRH850.PBG61.PROT1_CH2_GR0'),

    # PBG Group: PBG7H0
    ('RH850.PFRH850.PBG7H0.PROT0_CH0_GR0', 'RH850.PFRH850.PBG7H0.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG7H0.PROT0_CH1_GR0', 'RH850.PFRH850.PBG7H0.PROT1_CH1_GR0'),

    # PBG Group: PBG7L0
    ('RH850.PFRH850.PBG7L0.PROT0_CH0_GR0', 'RH850.PFRH850.PBG7L0.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG7L0.PROT0_CH1_GR0', 'RH850.PFRH850.PBG7L0.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG7L0.PROT0_CH2_GR0', 'RH850.PFRH850.PBG7L0.PROT1_CH2_GR0'),

    # PBG Group: PBG8H0
    ('RH850.PFRH850.PBG8H0.PROT0_CH0_GR0', 'RH850.PFRH850.PBG8H0.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG8H0.PROT0_CH1_GR0', 'RH850.PFRH850.PBG8H0.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG8H0.PROT0_CH2_GR0', 'RH850.PFRH850.PBG8H0.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG8H0.PROT0_CH3_GR0', 'RH850.PFRH850.PBG8H0.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG8H0.PROT0_CH4_GR0', 'RH850.PFRH850.PBG8H0.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG8H0.PROT0_CH5_GR0', 'RH850.PFRH850.PBG8H0.PROT1_CH5_GR0'),

    # PBG Group: PBG8L0
    ('RH850.PFRH850.PBG8L0.PROT0_CH0_GR0' , 'RH850.PFRH850.PBG8L0.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG8L0.PROT0_CH1_GR0' , 'RH850.PFRH850.PBG8L0.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG8L0.PROT0_CH2_GR0' , 'RH850.PFRH850.PBG8L0.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG8L0.PROT0_CH3_GR0' , 'RH850.PFRH850.PBG8L0.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG8L0.PROT0_CH4_GR0' , 'RH850.PFRH850.PBG8L0.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG8L0.PROT0_CH5_GR0' , 'RH850.PFRH850.PBG8L0.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG8L0.PROT0_CH6_GR0' , 'RH850.PFRH850.PBG8L0.PROT1_CH6_GR0'),
    ('RH850.PFRH850.PBG8L0.PROT0_CH7_GR0' , 'RH850.PFRH850.PBG8L0.PROT1_CH7_GR0'),
    ('RH850.PFRH850.PBG8L0.PROT0_CH8_GR0' , 'RH850.PFRH850.PBG8L0.PROT1_CH8_GR0'),
    ('RH850.PFRH850.PBG8L0.PROT0_CH9_GR0' , 'RH850.PFRH850.PBG8L0.PROT1_CH9_GR0'),
    ('RH850.PFRH850.PBG8L0.PROT0_CH10_GR0', 'RH850.PFRH850.PBG8L0.PROT1_CH10_GR0'),
    ('RH850.PFRH850.PBG8L0.PROT0_CH11_GR0', 'RH850.PFRH850.PBG8L0.PROT1_CH11_GR0'),
    ('RH850.PFRH850.PBG8L0.PROT0_CH12_GR0', 'RH850.PFRH850.PBG8L0.PROT1_CH12_GR0'),

    # PBG Group: PBG90
    ('RH850.PFRH850.PBG90.PROT0_CH0_GR0', 'RH850.PFRH850.PBG90.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG90.PROT0_CH1_GR0', 'RH850.PFRH850.PBG90.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG90.PROT0_CH2_GR0', 'RH850.PFRH850.PBG90.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG90.PROT0_CH3_GR0', 'RH850.PFRH850.PBG90.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG90.PROT0_CH4_GR0', 'RH850.PFRH850.PBG90.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG90.PROT0_CH5_GR0', 'RH850.PFRH850.PBG90.PROT1_CH5_GR0'),

    # PBG Group: PBG91, todo: not implemented in VLAB yet
    #('RH850.PFRH850.PBG90.PROT0_CH0_GR1', 'RH850.PFRH850.PBG90.PROT1_CH0_GR1'),
    #('RH850.PFRH850.PBG90.PROT0_CH1_GR1', 'RH850.PFRH850.PBG90.PROT1_CH1_GR1'),
    #('RH850.PFRH850.PBG90.PROT0_CH2_GR1', 'RH850.PFRH850.PBG90.PROT1_CH2_GR1'),

    # PBG Group: PBG100
    ('RH850.PFRH850.PBG100.PROT0_CH0_GR0' , 'RH850.PFRH850.PBG100.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH1_GR0' , 'RH850.PFRH850.PBG100.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH2_GR0' , 'RH850.PFRH850.PBG100.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH3_GR0' , 'RH850.PFRH850.PBG100.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH4_GR0' , 'RH850.PFRH850.PBG100.PROT1_CH4_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH5_GR0' , 'RH850.PFRH850.PBG100.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH6_GR0' , 'RH850.PFRH850.PBG100.PROT1_CH6_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH7_GR0' , 'RH850.PFRH850.PBG100.PROT1_CH7_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH8_GR0' , 'RH850.PFRH850.PBG100.PROT1_CH8_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH9_GR0' , 'RH850.PFRH850.PBG100.PROT1_CH9_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH10_GR0', 'RH850.PFRH850.PBG100.PROT1_CH10_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH11_GR0', 'RH850.PFRH850.PBG100.PROT1_CH11_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH13_GR0', 'RH850.PFRH850.PBG100.PROT1_CH13_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH14_GR0', 'RH850.PFRH850.PBG100.PROT1_CH14_GR0'),
    ('RH850.PFRH850.PBG100.PROT0_CH15_GR0', 'RH850.PFRH850.PBG100.PROT1_CH15_GR0'),

    # PBG Group: PBG101
    ('RH850.PFRH850.PBG100.PROT0_CH0_GR1' , 'RH850.PFRH850.PBG100.PROT1_CH0_GR1'),
    ('RH850.PFRH850.PBG100.PROT0_CH1_GR1' , 'RH850.PFRH850.PBG100.PROT1_CH1_GR1'),
    ('RH850.PFRH850.PBG100.PROT0_CH2_GR1' , 'RH850.PFRH850.PBG100.PROT1_CH2_GR1'),
    ('RH850.PFRH850.PBG100.PROT0_CH3_GR1' , 'RH850.PFRH850.PBG100.PROT1_CH3_GR1'),
    ('RH850.PFRH850.PBG100.PROT0_CH4_GR1' , 'RH850.PFRH850.PBG100.PROT1_CH4_GR1'),
    ('RH850.PFRH850.PBG100.PROT0_CH5_GR1' , 'RH850.PFRH850.PBG100.PROT1_CH5_GR1'),
    ('RH850.PFRH850.PBG100.PROT0_CH6_GR1' , 'RH850.PFRH850.PBG100.PROT1_CH6_GR1'),

    # PBG Group: PBG11H0
    ('RH850.PFRH850.PBG11H0.PROT0_CH0_GR0' , 'RH850.PFRH850.PBG11H0.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH1_GR0' , 'RH850.PFRH850.PBG11H0.PROT1_CH1_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH2_GR0' , 'RH850.PFRH850.PBG11H0.PROT1_CH2_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH3_GR0' , 'RH850.PFRH850.PBG11H0.PROT1_CH3_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH5_GR0' , 'RH850.PFRH850.PBG11H0.PROT1_CH5_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH7_GR0' , 'RH850.PFRH850.PBG11H0.PROT1_CH7_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH8_GR0' , 'RH850.PFRH850.PBG11H0.PROT1_CH8_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH9_GR0' , 'RH850.PFRH850.PBG11H0.PROT1_CH9_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH10_GR0', 'RH850.PFRH850.PBG11H0.PROT1_CH10_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH11_GR0', 'RH850.PFRH850.PBG11H0.PROT1_CH11_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH12_GR0', 'RH850.PFRH850.PBG11H0.PROT1_CH12_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH13_GR0', 'RH850.PFRH850.PBG11H0.PROT1_CH13_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH14_GR0', 'RH850.PFRH850.PBG11H0.PROT1_CH14_GR0'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH15_GR0', 'RH850.PFRH850.PBG11H0.PROT1_CH15_GR0'),

    # PBG Group: PBG11H1
    ('RH850.PFRH850.PBG11H0.PROT0_CH2_GR1' , 'RH850.PFRH850.PBG11H0.PROT1_CH2_GR1'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH3_GR1' , 'RH850.PFRH850.PBG11H0.PROT1_CH3_GR1'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH4_GR1' , 'RH850.PFRH850.PBG11H0.PROT1_CH4_GR1'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH5_GR1' , 'RH850.PFRH850.PBG11H0.PROT1_CH5_GR1'),
    ('RH850.PFRH850.PBG11H0.PROT0_CH6_GR1' , 'RH850.PFRH850.PBG11H0.PROT1_CH6_GR1'),

    # PBG Group: PBG11L0
    ('RH850.PFRH850.PBG11L0.PROT0_CH0_GR0' , 'RH850.PFRH850.PBG11L0.PROT1_CH0_GR0'),
    ('RH850.PFRH850.PBG11L0.PROT0_CH1_GR0' , 'RH850.PFRH850.PBG11L0.PROT1_CH1_GR0'),

    # HBG, todo: not implemented in VLAB yet
    #('RH850.PFRH850.HBG90.PROT0', 'RH850.PFRH850.HBG90.PROT1', ["K0"]),
    #('RH850.PFRH850.HBG91.PROT0', 'RH850.PFRH850.HBG91.PROT1'),
    #('RH850.PFRH850.HBG92.PROT0', 'RH850.PFRH850.HBG92.PROT1'),
    #('RH850.PFRH850.HBG93.PROT0', 'RH850.PFRH850.HBG93.PROT1', ["K0"]),
    #('RH850.PFRH850.HBG96.PROT0', 'RH850.PFRH850.HBG96.PROT1')
  ]
  PeripheralGuardEnableOffset = 8
  PeripheralGuardEnableValue = 1
  PeripheralGuardWriteGlobalEnableOffset = 1
  PeripheralGuardWriteGlobalEnableValue = 0

  LockRegs = [(regs[0], regs[2] if len(regs) == 3 else []) for regs in PeripheralGuardRegs if not isinstance(regs[0], (int, long)) and ("PBG" in regs[0] or "HBG" in regs[0])]


#############################################################################
#                             Test start                                    #
#############################################################################
tst.start()

# Run until start of Application and check that guards are not locked
tgt.run_until("RBSYS_StartupPreOSPhase0")
CheckGuardLockBit(0)

# Skip bootblock tests if stubbed BMGR is detected
if not app.get_bmgr_elf_image() or not app.get_bmgr_elf_image().does_symbol_exist("TRBA_BMGR_IS_STUBBED"):
  if app.get_function_switch_setting("RBFS_OEMBootloader") == "RBFS_OEMBootloader_Yes":
    # Reset to OEMBLDR
    tgt.run_until("Os_Entry_TaskBaseCtrlCycx1High")
    tgt.trigger_execution_of_function("RBSYS_uCReset_ApplResetWithBootBlock4OEM", 0)
    # Run until end of BMGR befor jump to OEMBLDR and check that guards are not locked
    tgt.run_until("rba_Bmgr_JumpToOemBldr", image=app.get_bmgr_elf_image())
    CheckGuardLockBit(0)
    # Run until start of Application and check that guards are not locked
    tgt.run_until("RBSYS_StartupPreOSPhase0")
    CheckGuardLockBit(0)

  if app.get_function_switch_setting("RBFS_RBBootloader") == "RBFS_RBBootloader_Yes":
    # Reset to RBBLDR
    tgt.run_until("Os_Entry_TaskBaseCtrlCycx1High")
    tgt.trigger_execution_of_function("RBSYS_uCReset_ApplResetWithBootBlock4RB", 0)
    # Run until end of BMGR befor jump to RBBLDR and check that guards are not locked
    tgt.run_until("rba_Bmgr_JumpToRbBldr", image=app.get_bmgr_elf_image())
    CheckGuardLockBit(0)
    # Reset to Application
    tgt.run_until("rba_BldrOs_Iterate", image=app.get_rbbldr_elf_image())
    tgt.trigger_execution_of_function("rba_BldrCmp_Cfg_PerformReset", image=app.get_rbbldr_elf_image(), core=0)
    # Run until start of Application and check that guards are not locked
    tgt.run_until("RBSYS_StartupPreOSPhase0")
    CheckGuardLockBit(0)

# Run until init is done and check that guards are locked
app.run_until_end_of_init()
CheckGuardLockBit(1)

# Peripheral guards only allow access to PEs
for GuardConfig in PeripheralGuardRegs:
  # get guard register content
  if len(GuardConfig) == 2:
    protReg, spidReg = GuardConfig
    exceptions = []
  else:
    protReg, spidReg, exceptions = GuardConfig

  # only check guard if applicable for SW target device
  if targetDevice not in exceptions:
    prot = ReadRegisterOrAddress(protReg)
    spid = ReadRegisterOrAddress(spidReg)

    if env.is_renesas_p1x_device():
      # apply exceptions to expected SPID/PEID (default only safe SPID/PEs)
      PEIDValue = PeripheralGuardPEIDPEs
      SPIDValue = 0x1 << safeSPID
      if "secureSPID" in exceptions:
        PEIDValue |= PeripheralGuardPEIDSecure
        SPIDValue |= secureSPIDmask
      if "PEID4" in exceptions:
        PEIDValue |= PeripheralGuardPEID4

      # check if guard is configured as expected
      tst.eval_eq(prot & PeripheralGuardPEIDMask, PEIDValue)
      tst.eval_eq(spid, SPIDValue)

    elif env.is_renesas_u2a_device() or env.is_renesas_u2c_device():
      tst.eval(((prot >> PeripheralGuardEnableOffset) & 0x1) == PeripheralGuardEnableValue)
      tst.eval(((prot >> PeripheralGuardWriteGlobalEnableOffset) & 0x1) == PeripheralGuardWriteGlobalEnableValue)

      expectedSPID = 0x1 << safeSPID
      if (env.is_renesas_u2a_device() or env.is_renesas_u2c_device()) and emulationDevice in ["D7ED", "M6ED", "K3ED"]:
        expectedSPID |= DebugSPID_mask
      if "secureSPID" in exceptions:
        expectedSPID |= 0x1 << secureSPID
      if "DMAUnsafeSPID" in exceptions:
        expectedSPID |= 0x1 << DMAUnsafeSPID
      tst.eval_eq(spid, expectedSPID)

if env.is_renesas_u2a_device() or env.is_renesas_u2c_device():
  for (protRegs, mpidRegs) in MPIDGuardProtRegs:
    for protReg in protRegs:
      prot = ReadRegisterOrAddress(protReg)
      mpid = (prot & MPIDMPIDMask)>> MPIDMPIDOffset

      tst.eval_eq(((prot >> MPIDEnableOffset) & 0x1), MPIDEnableValue)
      tst.eval(((prot >> MPIDWriteGlobalEnableOffset) & 0x1) == MPIDWriteGlobalEnableValue)

      spid = 0x0
      for i in range(8):
        if ((mpid >> i) & 0x1) == 1:
          spid |= 0x1 << ReadRegisterOrAddress(mpidRegs[i])
      expectedSPID = 0x1 << safeSPID
      # not accessible by XCP, so no DebugSPID_mask added to expectedSPID
      tst.eval_eq(spid, expectedSPID)

tst.end()